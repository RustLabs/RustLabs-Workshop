I"Õ<h1 id="definite-loop---for-loop">Definite Loop - For Loop</h1>

<h1 id="what-is-a-for-loop">What Is a for Loop?</h1>
<p>A for loop is a definite loop, meaning, the number of iterations is defined.</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/for_loop.png" alt="" /></p>

<h1 id="syntax">Syntax</h1>

<p>The for loop is followed by a variable that iterates over a list of values.
The general syntax is :
<img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/for_loop_flow.png" alt="" /></p>

<h1 id="example">Example</h1>
<p>The following example uses a for loop that prints 5 numbers.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    //define a for loop 
    for i in 0..5 {
      println!("{}", i);
    }
}

</code></pre></div></div>
<p>output</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>0
1
2
3
4
</code></pre></div></div>

<h1 id="explanation">Explanation</h1>

<ul>
  <li>for loop definition
    <ul>
      <li>On line 3 a for loop is defined.
        <ul>
          <li>Variable i is an iterator variable that iterates over the range with the lower bound as 0 and the upper bound as 5. From here the body of the loop starts.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>for loop body
    <ul>
      <li>The body of the for loop is defined from line 3 to line 5</li>
      <li>In each iteration:
        <ul>
          <li>On line 4, the value of the variable i is printed.</li>
          <li>The value of the variable i is incremented by 1.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>The iterator variable i traverses over the range until the upper bound is reached.</li>
</ul>

<p>Note: The lower bound is inclusive and the upper bound is exclusive in the range</p>

<p>The following illustration explains this concept:</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/for_loop_explain.png" alt="" /></p>

<p># Enumerate
To count how many times the loop has already executed, use the .enumerate() function.</p>

<ul>
  <li>Syntax 
The general syntax is :</li>
</ul>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/for_loop_enum.png" alt="" /></p>

<ul>
  <li>Example</li>
</ul>

<p>The example below prints the frequency of iterations and the value of variable.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  for (count, variable) in (7..10).enumerate() {
      println!("count = {}, variable = {}", count, variable);
  }
}

</code></pre></div></div>
<p>output</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>count = 0, variable = 7
count = 1, variable = 8
count = 2, variable = 9

</code></pre></div></div>

<h1 id="explanation-1">Explanation</h1>
<ul>
  <li>enumerated for loop definition
    <ul>
      <li>On line 2 an enumerate for loop is defined.</li>
      <li>The variable variable iterates over the range with the lower bound as 7 and the upper bound as 10 and a variable count which shows
 how many times the loop is iterated. From here the body of the loop starts.</li>
    </ul>
  </li>
  <li>enumerated for loop body
    <ul>
      <li>On line 3, the value of count and variable is printed and then incremented by 1.</li>
    </ul>
  </li>
</ul>

<h1 id="quiz">Quiz</h1>

<ol>
  <li>What is the output of the following code?</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
fn main() {
  for i in 0..5{
     if i % 4 == 0 {
        print!("{}", i);
     }
  }
}


</code></pre></div></div>

<p>A) 04 <br /></p>

<p>B) 01234 <br /></p>

<ol>
  <li>What is the output of the following code?</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
fn main() {
  for (count, variable) in (7..10).enumerate() {
       if count * 2 == 4{
      println!("count = {}, variable = {}", count, variable);
       }
  }
}


</code></pre></div></div>
<p>A)</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>count = 0, variable = 7
count = 1, variable = 8
count = 2, variable = 9
</code></pre></div></div>

<p>B)</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>count = 2, variable = 9

</code></pre></div></div>

:ET