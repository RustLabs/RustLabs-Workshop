I"<h1 id="loop-labels">Loop Labels</h1>

<ul>
  <li>
    <p>What Is a Loop Label? 
 A loop label assigns an identifier to a loop.</p>
  </li>
  <li>
    <p>Syntax 
Write a label and colon before the loop.</p>
  </li>
</ul>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/loop-label.png" alt="" /></p>

<ul>
  <li>Example 
The code below prints the multiplication table of 1 to 5 except 3. See how specifying a loop label helps you to skip the table of 3.</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
 'outer:for i in 1..5 { //outer loop
    println!("Muliplication Table : {}", i);
   'inner:for j in 1..5 { // inner loop
        if i == 3 { continue 'outer; } // Continues the loop over `i`.
        if j == 2 { continue 'inner; } // Continues the loop over `j`.
        println!("{} * {} = {}", i, j, i * j);
   }
 }
}

</code></pre></div></div>

<p>output:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Muliplication Table : 1
1 * 1 = 1
1 * 3 = 3
1 * 4 = 4
Muliplication Table : 2
2 * 1 = 2
2 * 3 = 6
2 * 4 = 8
Muliplication Table : 3
Muliplication Table : 4
4 * 1 = 4
4 * 3 = 12
4 * 4 = 16

</code></pre></div></div>

<h1 id="explanation">Explanation</h1>

<ul>
  <li>Outer for Loop
    <ul>
      <li>A for loop is defined on line <code class="language-plaintext highlighter-rouge">2</code>.</li>
      <li>The loop has a label outer . It takes i as an iterator that iterates over values from <code class="language-plaintext highlighter-rouge">1 </code>to <code class="language-plaintext highlighter-rouge">4</code>.</li>
    </ul>
  </li>
  <li>Inner for Loop
    <ul>
      <li>A for loop is defined on line <code class="language-plaintext highlighter-rouge">3</code></li>
      <li>The loop has a label inner. It takes j as an iterator that iterates over values from <code class="language-plaintext highlighter-rouge">1</code> to <code class="language-plaintext highlighter-rouge">5</code>.</li>
      <li>For each i the inner loop iterate j times and prints the product <code class="language-plaintext highlighter-rouge">i * j</code>.</li>
      <li>When the outer loop increments <code class="language-plaintext highlighter-rouge">i</code> to <code class="language-plaintext highlighter-rouge">3</code> and the inner loop starts from j = 1, the condition<code class="language-plaintext highlighter-rouge"> i == 3</code> is found to be true and the continue ‘outer statement causes execution to be transferred to the next iteration of the outer loop on line <code class="language-plaintext highlighter-rouge">2</code>. The variable <code class="language-plaintext highlighter-rouge">i </code>is incremented to <code class="language-plaintext highlighter-rouge">4</code> and the execution continues.</li>
      <li>When the value of j increments to <code class="language-plaintext highlighter-rouge">2</code>, then the 2nd iteration of the inner loop gets skipped and continue ‘inner causes the execution to be transferred to the next iteration of the inner loop on line <code class="language-plaintext highlighter-rouge">4</code>. The variable j is incremented to <code class="language-plaintext highlighter-rouge">3 </code>and the execution continues.</li>
    </ul>

    <table>
      <thead>
        <tr>
          <th>i</th>
          <th>j</th>
          <th>output</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><br /><br />1</td>
          <td>1<br /> 2<br /> 3<br /> 4</td>
          <td><br />1 * 1 = 1<br />1 * 3 = 3<br />1 * 4 = 4<br /><br /></td>
        </tr>
        <tr>
          <td>2</td>
          <td>1<br /> 2<br /> 3<br /> 4</td>
          <td>2 * 1 = 2<br />2 * 3 = 6<br />2 * 4 = 8</td>
        </tr>
        <tr>
          <td>3</td>
          <td> </td>
          <td> </td>
        </tr>
        <tr>
          <td>4</td>
          <td>1<br /> 2<br /> 3<br /> 4</td>
          <td>4 * 1 = 4<br />4 * 3 = 12<br />4 * 4 = 16</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

:ET