I"t<h1 id="iterating-over-strings">Iterating Over Strings</h1>
<p>The following methods describe three different ways of traversing a String:</p>

<ul>
  <li>Tokenizing a String Object 
A String object can be tokenized on whitespace or a character token.</li>
</ul>

<h1 id="tokenizing-to-separate-on-whitespaces">Tokenizing to Separate on Whitespaces</h1>

<p><code class="language-plaintext highlighter-rouge">split_whitespace</code> is used to split a String on the occurrence of whitespace. Loop through the String to split on whitespaces using a for loop.</p>

<p>Syntax</p>

<p>The general syntax is:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>for found in  str.split_whitespace(){
    println!("{}", found);
}

</code></pre></div></div>
<p>Here str is the original String which is to be traversed, <code class="language-plaintext highlighter-rouge">split_whitespace()</code> is a built-in keyword to split a string on whitespaces, for is used to traverse over the String and print
it as soon as the whitespace is found and found is an iterator over the String.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  // define a String object
  let str = String::from("Rust Programming"); 
  // split on whitespace
  for token in str.split_whitespace(){
      println!("{}", token);
  }
}
</code></pre></div></div>
<p>output</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Rust
Programming
</code></pre></div></div>

<h1 id="tokenizing-to-split-on-a-custom-character">Tokenizing to Split on a Custom Character</h1>
<p>split method is used to split a sentence on some token. The token is specified in the split method. This would be useful to 
process comma-separated data, which is a common programming task.</p>

<ul>
  <li>Syntax</li>
</ul>

<p>The general syntax is:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>for found in str.split(","){
    println!("{}", found);
}

</code></pre></div></div>

<p>Here str is the original String which is to be traversed,str.split() is a built-in method which takes a parameter,
i.e., any delimiter and split the sentence on that parameter, for is used to traverse over the String and print a word before the token.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  // define a String object
  let str = String::from("Educative, course on, Rust, Programming");  
  // split on token
  for token in str.split(","){
      println!("{}", token);
  }
}

</code></pre></div></div>
<p>output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Educative
 course on
 Rust
 Programming

</code></pre></div></div>

<h1 id="iterating-over-the-string-object">Iterating Over the String Object</h1>

<p>chars method allows iterating over each element in a String using a for loop.</p>
<ul>
  <li>Syntax 
The general syntax is:</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>for found in  str.chars(){
    println!("{}", found);
}

</code></pre></div></div>

<p>Here str is the original String which is to be traversed, <code class="language-plaintext highlighter-rouge">str.chars()</code> is a built-in keyword to denote letters in a String, 
for is used to traverse over the String and print every literal, and found is an iterator over the String.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  // define a String object
  let str = String::from("Rust Programming");  
  // split on literal
  for token in str.chars(){
      println!("{}", token);
  }
}

</code></pre></div></div>

<p>output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>R
u
s
t
 
P
r
o
g
r
a
m
m
i
n
g

</code></pre></div></div>

<h1 id="quiz">Quiz</h1>

<p>Test your understanding on looping through the String object.</p>

<ol>
  <li>What is the output of the following code? <b></b></li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    // define a String object
    let str = String::from("Educative, course on, Rust; Programming");  
    // split on token
    for token in str.split(";") {
        println!("{}", token);
    }
}


</code></pre></div></div>

<p>A)</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
Educative, course on, Rust

Programming

</code></pre></div></div>

<p>B)</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Educative

course on

Rust

Programming

</code></pre></div></div>

:ET