I"ò	<h1 id="logical-operators">Logical Operators</h1>

<h1 id="what-are-logical-operators">What Are Logical Operators?</h1>
<p>Logical operators operate on true / false values</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/logical-op.png" alt="" /></p>

<h1 id="types">Types</h1>

<p>The following table summarizes the types and functions of the logical operators:</p>

<table>
  <thead>
    <tr>
      <th>operator</th>
      <th>operation</th>
      <th>explanation</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>operand1 &amp;&amp; operand2</td>
      <td>AND</td>
      <td>Evaluates to true if operand 1 and Operand 2 both evaluates to be true</td>
    </tr>
    <tr>
      <td>operand1 || operand2</td>
      <td>OR</td>
      <td>Evaluates to true if operand 1 or Operand 2 true evaluates to be true</td>
    </tr>
    <tr>
      <td>! operand1</td>
      <td>NOT</td>
      <td>negates the value of single operand</td>
    </tr>
  </tbody>
</table>

<p>The logical AND and OR are known as Lazy Boolean expressions because the left-hand side operand of the operator is first evaluated. If it is false, there is no need to evaluate the right-hand side operand in 
case of AND. If it is true, there is no need to evaluate the right-hand side operand in case of OR.</p>

<p>The following example shows the use of logical operators in a program:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  let a = true;
  let b = false;
  println!("Operand 1:{}, Operand 2:{}", a , b);
  println!("AND:{}", a &amp;&amp; b);
  println!("OR:{}", a || b);
  println!("NOT:{}", ! a);
}


</code></pre></div></div>
<p>output:-</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Operand 1:true, Operand 2:false
AND:false
OR:true
NOT:false


</code></pre></div></div>

<h1 id="quiz">Quiz</h1>

<p>Test your understanding of logical operators in Rust!</p>

<ol>
  <li>What is the output of the following code?</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  let mut a = false;
  let mut b = true;
  a = a &amp;&amp; b || ( ! a);
  b = !b;
  println!("a:{}", a);
  println!("b:{}", b); 
}


</code></pre></div></div>

<p>A) a:false <br /></p>

<p>b:true  <br /></p>

<p>B) a:true  <br /></p>

<p>b:false  <br /></p>

<p>C) a:true  <br /></p>

<p>b:true  <br /></p>

<p>D) a:false  <br /></p>

<p>b:false  <br /></p>

:ET