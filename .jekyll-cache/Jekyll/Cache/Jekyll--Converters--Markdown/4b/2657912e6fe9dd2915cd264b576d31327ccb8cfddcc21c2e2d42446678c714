I"f<h1 id="challenge-find-if-the-day-is-a-weekend">Challenge: Find If the Day Is a Weekend</h1>

<h1 id="problem-statement">Problem Statement</h1>

<ul>
  <li>An enum Days has been provided to you. It has all the days of the week.</li>
  <li>A method is_weekend() is incomplete.
    <ul>
      <li>The task is to complete the method
        <ul>
          <li>If the day is a weekend it returns 1</li>
          <li>If the day is a weekday it returns 0</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<h2 id="input">Input</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  Day of the Week
</code></pre></div></div>
<p>Note: Assume that days of the week are passed to the function</p>

<h2 id="output">Output</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   1  or  0
</code></pre></div></div>

<h2 id="sample-input">Sample Input</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Wednesday
</code></pre></div></div>

<h2 id="sample-output">Sample Output</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   0
</code></pre></div></div>

<h1 id="coding-exercise">Coding Exercise</h1>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>enum Days {
  Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday
}
impl Days {
   fn is_weekend(&amp;self)-&gt;i32{
      // Write code here
      2 
   }
}


</code></pre></div></div>

<p>Good luck!ðŸ¤ž</p>
:ET