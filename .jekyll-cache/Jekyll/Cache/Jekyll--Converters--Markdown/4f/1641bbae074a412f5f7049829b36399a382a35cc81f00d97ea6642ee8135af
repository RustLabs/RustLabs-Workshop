I"<h1 id="what-are-constant-variables">What Are Constant Variables?</h1>

<ul>
  <li>Constant variables are ones that are declared constant throughout the program scope, meaning, their value cannot be modified. They can be defined 
in global and local scope.</li>
</ul>

<h1 id="syntax">Syntax</h1>
<ul>
  <li>They are declared using the <code class="language-plaintext highlighter-rouge">const</code> keyword followed by the name of the variable, colon <code class="language-plaintext highlighter-rouge">(:)</code>, and then the data type of the variable.</li>
</ul>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/const_syntax.png" alt="" /></p>

<ul>
  <li>Naming Convention: By convention, you write a constant variable name in a SCREAMING_SNAKE_CASE, i.e.,
    <ul>
      <li>All letters should be UPPER case.</li>
      <li>All words should be separated using an underscore <code class="language-plaintext highlighter-rouge">( _ )</code>.</li>
    </ul>
  </li>
</ul>

<h1 id="example">Example</h1>
<p>The following example defines two const variables:</p>
<ul>
  <li>ID_1 in global scope</li>
  <li>ID_2 in local scope</li>
</ul>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   const ID_1: i32 = 4; // define a global constant variable
fn main() {
    const ID_2: u32 = 3; // define a local constant variable
    println!("ID:{}", ID_1); // print the global constant variable
    println!("ID:{}", ID_2); // print the local constant variable
}
   
</code></pre></div></div>

<p>output:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ID:4
ID:3

</code></pre></div></div>

<h1 id="difference-between-const-and-let-variables">Difference Between const and let Variables</h1>

<p>There are many differences between const and let variables.</p>

<ul>
  <li>Declaration
    <ul>
      <li>Constant variables are declared using the const keyword unlike let variables.</li>
    </ul>
  </li>
  <li>Scope
    <ul>
      <li>const variables are declared in global and local scope unlike let variables that are declared only in the local scope.</li>
    </ul>
  </li>
  <li>Mutability
    <ul>
      <li>const variable cannot be mutable unlike let which can be made mutable using mut keyword.</li>
    </ul>
  </li>
  <li>Data Type
    <ul>
      <li>Unlike let variables, it is mandatory to define the data type of const variables.</li>
    </ul>
  </li>
  <li>Set Value at Run-time
    <ul>
      <li>The value of const variable can only be set before running the program whereas the let variable can store the result at runtime.</li>
    </ul>
  </li>
  <li>Shadowing
    <ul>
      <li>Unlike let variables, const variables cannot be shadowed.</li>
    </ul>
  </li>
</ul>

:ET