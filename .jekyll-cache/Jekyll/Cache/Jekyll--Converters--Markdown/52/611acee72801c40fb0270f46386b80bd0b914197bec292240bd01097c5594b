I"{<h1 id="enums-and-match-control-flow-operator">Enums and Match Control Flow Operator</h1>
<p>The match statement can be used to compare values within an enum. The match statement can be written within a main function or any other user-defined function.</p>

<h1 id="syntax">Syntax</h1>
<p>The match statement can be written within a function be it main or any other user-defined function.</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/match-enum.png" alt="" /></p>
<h1 id="example">Example</h1>
<p>The example below makes use of a match statement within a <code class="language-plaintext highlighter-rouge">print_direction</code> function.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>enum KnightMove{

   Horizontal,Vertical

}

// print function 

fn print_direction(direction:KnightMove) {

   // match statement

   match direction {

      //execute if knight move is horizontal

      KnightMove::Horizontal =&gt; {

         println!("Move in horizontal direction");

      },

       //execute if knight move is vertical

      KnightMove::Vertical =&gt; {

         println!("Move in vertical direction");

      }

   }

}

fn main() {

   // invoke function `print_direction`

   let knight1 = KnightMove::Horizontal;

   let knight2 = KnightMove::Vertical;

   print_direction(knight1);

   print_direction(knight2);

}


</code></pre></div></div>

<p>output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Move in horizontal direction
Move in vertical direction

</code></pre></div></div>

:ET