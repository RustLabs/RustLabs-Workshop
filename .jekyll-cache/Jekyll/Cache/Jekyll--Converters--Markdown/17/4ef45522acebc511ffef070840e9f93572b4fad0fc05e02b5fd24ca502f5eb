I"»&<h1 id="if-expression">If Expression</h1>

<p>There can be multiple conditional constructs using an if statement.</p>

<ul>
  <li>
    <p>If expression</p>
  </li>
  <li>
    <p>If‚Ä¶else expression</p>
  </li>
  <li>
    <p>If‚Ä¶else if‚Ä¶else expression</p>
  </li>
  <li>
    <p>Nested if expression</p>
  </li>
  <li>
    <p>Shorthand if expression</p>
  </li>
</ul>

<p>Let‚Äôs discuss each one of them in detail:-</p>

<h1 id="if-expression-1">If Expression</h1>

<p>If expression takes a condition. If the condition within the if expression evaluates to be true, then the block of code is executed.</p>

<ul>
  <li>Syntax 
The general syntax is:</li>
</ul>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/if_condition.png" alt="" /></p>

<h1 id="illustration">Illustration</h1>

<p>The following flow chart explains the concept of an if statement:
<img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/if-illu-flow.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
      //define a variable  
      let learn_language = "Rust";
      // if construct 
      if learn_language == "Rust" { 
         println!("You are learning Rust language!");
      }
}



</code></pre></div></div>

<p>output:-</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You are learning Rust language!
</code></pre></div></div>

<h1 id="ifelse-expression">If‚Ä¶else Expression</h1>

<p>In an <code class="language-plaintext highlighter-rouge">if..else</code> construct, if the condition within the if expression evaluates to be false, then the statement within the else block is executed.</p>

<ul>
  <li>Syntax</li>
</ul>

<p>The general syntax is:</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/if-else-condi.png" alt="" /></p>

<h1 id="illustration-1">Illustration</h1>

<p>The following flow chart explains the concept of an if..else statement:
<img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/if-else-flow.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    //define a variable 
    let learn_language = "Rust";
    // if else construct 
    if learn_language == "Rust" { 
        println!("You are learning Rust language!");
    }
    else {
      println!("You are learning some other language!");
    } 
}

</code></pre></div></div>
<p>Output</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You are learning Rust language!
</code></pre></div></div>

<h1 id="ifelse-ifelse-expression">if‚Ä¶else if‚Ä¶else Expression</h1>

<p>If there are multiple conditions to be checked, then if..else if..else construct is used.</p>

<p>Syntax 
The general syntax is:
<img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/if-else-if-else-condi.png" alt="" /></p>

<h1 id="llustration">llustration</h1>
<p>The following flow chart explains the concept of an if..else if..else expression:</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/if-else-if-else-flow.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
      //define a variable 
      let learn_language="Rust";
      // if..elseif..else construct 
      if learn_language == "Rust" { 
         println!("You are learning Rust language!");
      }
      else if learn_language == "Java" { 
         println!("You are learning Java language!");
      }
      else {
         println!("You are learning some other language!");
      } 
}



</code></pre></div></div>
<p>Output</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You are learning Rust language!

</code></pre></div></div>

<h1 id="nested-if-expression">Nested if Expression</h1>
<p>An if expression inside the body of another if expression is referred to as a nested if expression.</p>
<ul>
  <li>Syntax 
An if construct is enclosed within an if construct.
The general syntax is:
<img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/nested-if.png" alt="" /></li>
</ul>

<p>Note: The nested if expression can also be written with a AND expression in an if.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>if condition1 &amp;&amp; condition2 
{
 //statement
}

</code></pre></div></div>
<p>This is true only if the second if statement is the only thing inside the first if.</p>

<h1 id="illustration-2">Illustration</h1>

<p>The following flow chart explains the concept of a nested if statement .</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/nested-if-flow.png" alt="" /></p>

<p>Note: There can be as many levels of nesting as you want.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    //define a variable 
    let learn_language1 = "Rust";
    let learn_language2 = "Java";
    // outer if statement
    if learn_language1 == "Rust" {  // inner if statement
        if learn_language2 == "Java"{
              println!("You are learning Rust and Java language!");
        }
    }
    else {
      println!("You are learning some other language!");
    } 
}


</code></pre></div></div>

<p>output:-</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>You are learning Rust and Java language!

</code></pre></div></div>

<h1 id="shorthand-if">Shorthand if</h1>
<p>Instead of writing a lengthy if-else construct, we can use a shorthand if.</p>

<p>Syntax 
The general syntax is:
<img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/short-if.png" alt="" /></p>

<p>Note: This is similar to a ternary operator in languages like C and C++.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> fn main() {
    //define a variable  
    let learn_language = "Rust";
    // short hand construct
    let res= if learn_language == "Rust" {"You are learning Rust language!"} else {"You are learning some other language!"};
    println!("{}", res);
}
 
 
</code></pre></div></div>
<p>Note: Expressions can return a value, unlike statements. Recall that the semicolon turns any expression into a statement. It throws away its value and returns a unit () instead.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    let x = "Rust";

    let y: bool = if x == "Rust" { true } else { false };

    // let z: bool = if x == "Rust" { true; } else { false; };

    println!("x:{}", x);
    println!("y:{}", y);

}

</code></pre></div></div>
<p>Note: Uncommenting line 6 in the above code gives an error ‚ùå since we are trying to convert an expression to a statement and hence not returning a value.</p>

<h1 id="quiz">Quiz</h1>

<p>Test your understanding of if expressions in Rust.</p>

<ol>
  <li>What is the output of the following code?</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
   let age=23; 
   if age &gt;=21{ 
      println!("Age is greater than 21");
   }
    else if age &lt;21{
       println!("Age is less than 21");
    }
    println!("Value Printed");
}

</code></pre></div></div>
<p>A) Age is greater than 21 <br />
   Value Printed</p>

<p>B) Age is less than 21 <br />
   Value Printed</p>

<p>C) Age is greater than 21 <br />
D) Age is less than 21 <br /></p>

<ol>
  <li>Which If block is executed? <br /></li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
   let age=23; 
   let play=true; 
   let activity="Tennis" ;
   if age &gt;=21 &amp;&amp; play==false &amp;&amp; activity=="Tennis"{ 
     println!("Age is greater than 21");
     println!("You are not allowed to play");
     println!("The sport is {}",activity);
   }
   else if  age &gt;=21 &amp;&amp; play==true &amp;&amp; activity=="Tennis"{ 
     println!("Age is greater than 21");
     println!("You are allowed to play");
     println!("The sport is {}",activity);
   }
   else if age &lt;21 &amp;&amp; play==false &amp;&amp; activity=="Tennis"{
     println!("Age is less than 21");
     println!("You are allowed to play");
     println!("The sport is {}",activity);
   }
   else {
     println!("Value Printed");
   }
}


</code></pre></div></div>

<p>A) First <br />
B) Second <br />
C) Third <br /></p>

<ol>
  <li>What is the output of the following code? <br /></li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  let age = 23; 
  let play = true; 
  let activity="Baseball" ;
  if age &gt;= 21 &amp;&amp; play==true || activity == "Tennis" { 
    println!("Age is greater than 21");
    println!("You are allowed to play");
    println!("The sport is {}",activity);
  }
  else if  age &gt;= 21 &amp;&amp; play == true &amp;&amp; activity == "Tennis"{ 
    println!("Age is greater than 21");
    println!("You are allowed to play");
    println!("The sport is {}",activity);
  }
  else if age &lt;21 &amp;&amp; play == false &amp;&amp; activity == "Tennis"{
    println!("Age is less than 21");
    println!("You are allowed to play");
    println!("The sport is {}",activity);
  }
  else{
    println!("Value Printed");
  }
 }

</code></pre></div></div>

<p>A) Age is greater than 21 <br />
You are allowed to play <br />
The sport is Baseball <br /></p>

<p>B)Age is greater than 21 <br />
You are allowed to play <br />
The sport is Tennis <br /></p>

:ET