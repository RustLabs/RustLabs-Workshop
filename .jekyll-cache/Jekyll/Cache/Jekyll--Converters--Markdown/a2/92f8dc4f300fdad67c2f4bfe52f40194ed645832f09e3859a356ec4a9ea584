I"»<h1 id="match-expression">Match Expression</h1>

<h1 id="what-is-a-match-expression">What Is a match Expression?</h1>

<p>Match expression checks if the current value corresponds to any value within the list of values.
Match expression are similar to switch statement in languages like C and C++. They give a more compact code when compared with the if/else construct.</p>

<ul>
  <li>
    <p>Syntax 
Match expression uses a match keyword.
The match expression can be written in two different ways, which are given below:</p>
  </li>
  <li>
    <p>Method 1: 
If you do not want to assign a value to the result variable from within the match block</p>
  </li>
</ul>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/match_ex1.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    // define a variable 
    let x = 5;
    // define match expression
    match x {
        1 =&gt; println!("Java"),
        2 =&gt; println!("Python"),
        3 =&gt; println!("C++"),
        4 =&gt; println!("C#"),
        5 =&gt; println!("Rust"),
        6 =&gt; println!("Kotlin"),
        _ =&gt; println!("Some other value"),
    };
}

</code></pre></div></div>
<p>output:-</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Rust
</code></pre></div></div>

<h1 id="method-2">Method 2:</h1>
<p>If you want to assign a value to the result variable from within the match block</p>

<p><img src="https://raw.githubusercontent.com/sangam14/RustLabs/master/img/match_ex2.png" alt="" /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main(){
   // define a variable
   let course = "Rust";
   // return value of match expression in a variable
   let found_course = match course {
      "Rust" =&gt; "Rust",
      "Java" =&gt; "Java",
      "C++" =&gt; "C Plus Plus",
      "C#" =&gt; "C Sharp",
      _ =&gt; "Unknown Language"
   };
   println!("Course name : {}",found_course);
}

</code></pre></div></div>
<p>output:-</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Course name : Rust

</code></pre></div></div>

<h1 id="quiz">Quiz</h1>
<p>Test your understanding of match expression in Rust.</p>
<ol>
  <li>What is the output of the following code?</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  let x = 21;
 
  match x {
      1 =&gt; println!("Java"),
      2 =&gt; println!("Python"),
      3 =&gt; println!("C++"),
      4 =&gt; println!("C#"),
      5 =&gt; println!("Rust"),
      6 =&gt; println!("Kotlin"),
      _ =&gt; println!("Some other value"),
  }
}


</code></pre></div></div>
<p>A) Python <br /> 
   Java <br />
B) Some other value <br /></p>

<ol>
  <li>What is the output of the following code?</li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
  let mut x = 2;
  match x {
      1 =&gt; println!("Java"),
      2 =&gt; println!("Python"),
      3 =&gt; println!("C++"),
      4 =&gt; println!("C#"),
      5 =&gt; println!("Rust"),
      6 =&gt; println!("Kotlin"),
      _ =&gt; println!("Some other value"),
  }
  x = 1;
  match x {
      1 =&gt; println!("Java"),
      2 =&gt; println!("Python"),
      3 =&gt; println!("C++"),
      4 =&gt; println!("C#"),
      5 =&gt; println!("Rust"),
      6 =&gt; println!("Kotlin"),
      _ =&gt; println!("Some other value"),
  }
}


</code></pre></div></div>

<p>A) Python <br />
   Java <br /></p>

<p>B) Some other value <br /></p>

<p>C) Java <br />
   Python <br /></p>

:ET