I"ž<h1 id="boolean">Boolean</h1>

<p>The boolean variable can take a value either true or false.</p>

<h1 id="example">Example</h1>

<p>The following code explains how to define a boolean variable in three different ways:</p>

<ul>
  <li>Explicit Definition</li>
</ul>

<p>The following code explicitly defines the variable using the bool keyword:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    //explicitly define a bool
    let is_bool:bool = true;
    println!("explicitly_defined: {}", is_bool);
}

</code></pre></div></div>
<p>Output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>explicitly_defined: true
</code></pre></div></div>

<h1 id="implicit-definition">Implicit Definition</h1>

<p>The following code implicitly defines the boolean type of a variable by assigning the value true or false to the variable.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    // assign a boolean value
    let a = true;
    let b = false;
    println!("a: {}", a);
    println!("b: {}", b);
}


</code></pre></div></div>
<h1 id="result-of-an-expression">Result of an Expression</h1>

<p>The result of an expression that evaluates to either true or false (for example a comparison of two values) can be assigned to an implicit boolean variable</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>fn main() {
    // get a value from an expression
    let c = 10 &gt; 2;
    println!("c: {}", c);
}



</code></pre></div></div>
<p>Output</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>c: true
</code></pre></div></div>

<h1 id="quiz">Quiz</h1>

<p>Test your understanding of boolean data type in Rust!</p>

<ol>
  <li>What is the output of the following code? <br /></li>
</ol>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
let value = 13 &gt; 20;
println!("{}", value);

</code></pre></div></div>
<p>a) True <br /> 
b) false <br /></p>

:ET